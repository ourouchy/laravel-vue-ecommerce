version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        command: ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
        depends_on:
            - mysql
        networks:
            - laravel_network

    nginx:
        image: nginx:stable-alpine
        container_name: laravel_nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - .:/var/www
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - laravel_network

    mysql:
        image: mysql:5.7
        container_name: laravel_mysql
        restart: unless-stopped
        env_file:
            - ./env/mysql.env
        volumes:
            - mysql_data:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - laravel_network

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: backend_vue
        working_dir: /app
        volumes:
            - ./backend:/app
        command: ["npm", "run", "dev"]
        ports:
            - "5174:5174"
        networks:
            - laravel_network

    frontend:
        build:
            context: .
            dockerfile: frontend.Dockerfile
        container_name: frontend_alpine
        working_dir: /app
        volumes:
            - .:/app
        command: ["npm", "run", "dev"]
        ports:
            - "5173:5173"
        networks:
            - laravel_network

    composer:
        image: composer:latest
        container_name: composer_install
        working_dir: /var/www
        volumes:
            - .:/var/www
        command: ["composer", "install"]
        networks:
            - laravel_network

    artisan:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: artisan_commands
        working_dir: /var/www
        volumes:
            - .:/var/www
        entrypoint: ["php", "artisan"]
        networks:
            - laravel_network

volumes:
    mysql_data:

networks:
    laravel_network:
